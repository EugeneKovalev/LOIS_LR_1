m4include(m4define([m4currentFile],builtin(translit,__file__,\,/))builtin(regexp,m4currentFile,.*[/],\&)_config.m4)
M4SCS([
#include "../../include/sckp_keynodes.scsy" 
// Location: /lib/test/comparator_strict_filter
//	nodeA	arcA	undfA	nodeB	arcB	undfB
// nodeA	1		1	1	1
// arcA				1	1	1
// undfA			1	1	1
// nodeB				1			
// arcB
// undfB
])
procedure(test_comparator_strict_filter,
M4SCS(	[[	chain_push_singlet = "/lib/chain/push_singlet/chain_push_singlet",
		chain_push_first_singlet = "/lib/chain/push_first_singlet/chain_push_first_singlet",
		chain_destroy = "/lib/chain/destroy/chain_destroy",
		chain_pop_destroy_singlet = "/lib/chain/pop_destroy_singlet/chain_pop_destroy_singlet",
		set_comparator_strict_filter = "/lib/set/comparator_strict_filter/set_comparator_strict_filter",
		prm1,prm2,prm3,prm4,prm5,prm6,prm7]])
M4SEC(	[[
		chain_push_singlet = /../chain/push_singlet[SYFIX]/chain_push_singlet,
		chain_push_first_singlet = /../chain/push_first_singlet[SYFIX]/chain_push_first_singlet,
		chain_destroy = /../chain/destroy[SYFIX]/chain_destroy,
		chain_pop_destroy_singlet = /../chain/pop_destroy_singlet[SYFIX]/chain_pop_destroy_singlet,
		set_comparator_strict_filter = /../set/comparator_strict_filter[SYFIX]/set_comparator_strict_filter,
		prm1,prm2,prm3,prm4,prm5,prm6,prm7]]), 
	[{
		setA,setB,
		undfA,undfB,nodeA,nodeB,arcA,arcB,
		arc,descr,empty,state,
		parameters,history}], 
	{[]}) 

genEl([1_: assign_: node_: const_: empty])

genEl([1_: assign_: node_: const_: setA])
genEl([1_: assign_: node_: const_: setB])
genElStr3([
		1_: assign_: node_: const_: nodeA,
		2_: assign_: arc_: permanent_: pos_: const_: arcA,
		3_: assign_: undf_: const_: undfA])

genElStr3([
		1_: assign_: node_: const_: nodeB,
		2_: assign_: arc_: permanent_: neg_: const_: arcB,
		3_: assign_: undf_: const_: undfB])

genElStr3([
		1_: fixed_: setA,
		2_: assign_: arc_: temporary_: actual_: pos_: const_: arc,
		3_: fixed_: nodeA])

genElStr3([
		1_: fixed_: setA,
		2_: assign_: arc_: permanent_: pos_: const_: arc,
		3_: fixed_: undfA])

genElStr3([
		1_: fixed_: setA,
		2_: assign_: arc_: permanent_: pos_: const_: arc,
		3_: fixed_: arcA])

genElStr3([
		1_: fixed_: setA,
		2_: assign_: arc_: permanent_: neg_: const_: arc,
		3_: fixed_: nodeB])

genElStr3([
		1_: fixed_: setA,
		2_: assign_: arc_: permanent_: neg_: const_: arc,
		3_: fixed_: undfB])

genElStr3([
		1_: fixed_: setA,
		2_: assign_: arc_: permanent_: neg_: const_: arc,
		3_: fixed_: arcB])

genElStr3([
		1_: fixed_: setB,
		2_: assign_: arc_: temporary_: actual_: pos_: const_: arc,
		3_: fixed_: nodeB])

genElStr3([
		1_: fixed_: setB,
		2_: assign_: arc_: permanent_: pos_: const_: arc,
		3_: fixed_: undfB])

genElStr3([
		1_: fixed_: setB,
		2_: assign_: arc_: permanent_: pos_: const_: arc,
		3_: fixed_: arcB])

genElStr3([
		1_: fixed_: setB,
		2_: assign_: arc_: permanent_: neg_: const_: arc,
		3_: fixed_: nodeA])

genElStr3([
		1_: fixed_: setB,
		2_: assign_: arc_: permanent_: neg_: const_: arc,
		3_: fixed_: undfA])

genElStr3([
		1_: fixed_: setB,
		2_: assign_: arc_: permanent_: neg_: const_: arc,
		3_: fixed_: arcA])

genEl([1_: assign_: node_: const_: parameters])
varAssign([1_: assign_: state, 2_: fixed_: parameters])
call([1_: fixed_: chain_push_first_singlet, 2_: fixed_: prm1 = [{1_: nodeA, 2_: history, 3_: empty}], 3_: assign_: descr])

waitReturn([1_: fixed_: descr])

call([1_: fixed_: chain_push_singlet, 2_: fixed_: prm2 = [{1_: history, 2_: nodeB, 3_: history, 4_: empty}], 3_: assign_: descr])

waitReturn([1_: fixed_: descr])

call([1_: fixed_: set_comparator_strict_filter, 2_: fixed_: prm3 = [{1_: state, 2_: empty, 3_: history, 4_: parameters, 5_: empty}], 3_: assign_: descr])

waitReturn([1_: fixed_: descr])

M4SCS(
printEl([1_: fixed_: state])
printEl([1_: fixed_: empty])
)

call([	1_: fixed_: chain_destroy,
	2_: fixed_: prm4 = [{1_: parameters, 2_: empty}],
	3_: assign_: descr])

waitReturn([1_: fixed_: descr])

call([	1_: fixed_: chain_pop_destroy_singlet,
	2_: fixed_: prm5 = [{1_: history, 2_: history, 3_: empty}],
	3_: assign_: descr])

waitReturn([1_: fixed_: descr])

call([	1_: fixed_: chain_pop_destroy_singlet,
	2_: fixed_: prm6 = [{1_: history, 2_: history, 3_: empty}],
	3_: assign_: descr])

waitReturn([1_: fixed_: descr])

call([	1_: fixed_: chain_destroy,
	2_: fixed_: prm7 = [{1_: history, 2_: empty}],
	3_: assign_: descr])

waitReturn([1_: fixed_: descr])

eraseEl([1_: fixed_: f_: setA])
eraseEl([1_: fixed_: f_: setB])
eraseEl([1_: fixed_: f_: arcA])
eraseEl([1_: fixed_: f_: arcB])
eraseEl([1_: fixed_: f_: undfA])
eraseEl([1_: fixed_: f_: undfB])
eraseEl([1_: fixed_: f_: nodeA])
eraseEl([1_: fixed_: f_: nodeB])

eraseEl([1_: fixed_: f_: empty])

return()
end()